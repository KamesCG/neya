{
  "contractName": "EtherPaymentFallback",
  "abi": [
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": "0x6080604052348015600f57600080fd5b50603b80601d6000396000f3fe608060405200fea265627a7a723158207709a01216968761d2aa045a3f6a3b36466d6e31fedcd8b8de08ef3a73ac22c364736f6c634300050b0032",
  "deployedBytecode": "0x608060405200fea265627a7a723158207709a01216968761d2aa045a3f6a3b36466d6e31fedcd8b8de08ef3a73ac22c364736f6c634300050b0032",
  "sourceMap": "175:155:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;175:155:8;;;;;;;",
  "deployedSourceMap": "175:155:8:-;;;",
  "source": "pragma solidity >=0.5.0 <0.7.0;\n\n\n/// @title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract EtherPaymentFallback {\n\n    /// @dev Fallback function accepts Ether transactions.\n    function ()\n        external\n        payable\n    {\n\n    }\n}\n",
  "sourcePath": "/Users/admin/Documents/GitHub/contracts/safe-contracts/contracts/common/EtherPaymentFallback.sol",
  "ast": {
    "absolutePath": "/Users/admin/Documents/GitHub/contracts/safe-contracts/contracts/common/EtherPaymentFallback.sol",
    "exportedSymbols": {
      "EtherPaymentFallback": [
        1984
      ]
    },
    "id": 1985,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1979,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 1984,
        "linearizedBaseContracts": [
          1984
        ],
        "name": "EtherPaymentFallback",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1982,
              "nodeType": "Block",
              "src": "320:8:8",
              "statements": []
            },
            "documentation": "@dev Fallback function accepts Ether transactions.",
            "id": 1983,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:2:8"
            },
            "returnParameters": {
              "id": 1981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:8"
            },
            "scope": 1984,
            "src": "271:57:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1985,
        "src": "175:155:8"
      }
    ],
    "src": "0:331:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/admin/Documents/GitHub/contracts/safe-contracts/contracts/common/EtherPaymentFallback.sol",
    "exportedSymbols": {
      "EtherPaymentFallback": [
        1984
      ]
    },
    "id": 1985,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1979,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 1984,
        "linearizedBaseContracts": [
          1984
        ],
        "name": "EtherPaymentFallback",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1982,
              "nodeType": "Block",
              "src": "320:8:8",
              "statements": []
            },
            "documentation": "@dev Fallback function accepts Ether transactions.",
            "id": 1983,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:2:8"
            },
            "returnParameters": {
              "id": 1981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:8"
            },
            "scope": 1984,
            "src": "271:57:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1985,
        "src": "175:155:8"
      }
    ],
    "src": "0:331:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.3",
  "updatedAt": "2019-11-10T01:32:19.353Z"
}